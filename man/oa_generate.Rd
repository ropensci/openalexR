% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coro.R
\name{oa_generate}
\alias{oa_generate}
\title{A generator for making request to OpenAlex API
Returns one record at a time.}
\usage{
oa_generate(...)
}
\arguments{
\item{...}{arguments passed to the generator including
`query_url`, `mailto`, `api_key`, and `verbose`.
See `oa_request` for details on these arguments.}
}
\value{
Generator function.
}
\description{
TODO check group_by
}
\examples{
if (require("coro")) {
  query_url <- "https://api.openalex.org/works?filter=cites\%3AW1160808132"
  oar <- oa_generate(query_url, verbose = TRUE)
  p1 <- oar() # record 1
  p2 <- oar() # record 2
  p3 <- oar() # record 3
  head(p1)
  head(p3)

  # You can also call the generate function until exhausted.
  # More details at https://coro.r-lib.org/articles/generator.html.

  oar <- oa_generate(query_url)
  record_i <- NULL
  j <- 0
  while (!(is.symbol(record_i) && record_i == ".__exhausted__.")) {
    j <- j + 1
    recs_100 <- vector("list", 100)
    for (i in seq.int(100)) {
      record_i <- oar()
      recs_100[[i]] <- record_i
    }
    # saveRDS(recs_100, sprintf("rec-\%s.rds", j))
  }
  record_i
  j
  # 398 works total, so j = 4 makes sense.
  # the last two elements of the latest recs_100 is .__exhausted__.
  str(tail(recs_100), max.level = 1)
}

}
